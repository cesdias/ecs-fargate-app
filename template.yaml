AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VpcCIDR:
    Description: CIDR block for the VPC
    Type: String
    Default: 192.168.0.0/16

  PublicSubnet1CIDR:
    Description: CIDR block for the public subnet 1
    Type: String
    Default: 192.168.1.0/24

  PublicSubnet2CIDR:
    Description: CIDR block for the public subnet 2
    Type: String
    Default: 192.168.2.0/24

  PrivateSubnet1CIDR:
    Description: CIDR block for the private subnet 1
    Type: String
    Default: 192.168.3.0/24

  PrivateSubnet2CIDR:
    Description: CIDR block for the private subnet 2
    Type: String
    Default: 192.168.4.0/24

  ContainerImage:
    Description: URL of the Docker container image
    Type: String
    Default: docker-image-url

### Resources definition
Resources:

  # Virtual Private Cloud definition
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: ecs-fargate-app-vpc"

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref 'PublicSubnet1CIDR'
      AvailabilityZone: !Select
        - 0
        - !GetAZs ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ecs-fargate-app-public-subnet-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref 'PublicSubnet2CIDR'
      AvailabilityZone: !Select
        - 1
        - !GetAZs ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ecs-fargate-app-public-subnet-2

  # Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref 'PrivateSubnet1CIDR'
      AvailabilityZone: !Select
        - 0
        - !GetAZs ""
      Tags:
        - Key: Name
          Value: ecs-fargate-app-private-subnet-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref 'PrivateSubnet2CIDR'
      AvailabilityZone: !Select
        - 1
        - !GetAZs ""
      Tags:
        - Key: Name
          Value: ecs-fargate-app-private-subnet-2

  # Route Table definition
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ecs-fargate-app-rtb

  # Internet Gateway definition
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ecs-fargate-app-igw

  # Attach the Internet Gateway to a VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  ### Security Groups definition

  # Allow inbound traffic to HTTP and HTTPS
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the web application
      GroupName: ecs-fargate-app-sg-lb
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: Allow HTTP inbound traffic
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - Description: Allow HTTPS inbound traffic
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - Description: Allow all outbound traffic
          IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ecs-fargate-app-sg-lb

  ### Load Balancer definition

  # Application Load Balancer
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Name: ecs-fargate-app-lb
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref WebAppSecurityGroup
      Tags:
        - Key: Name
          Value: ecs-fargate-app-lb

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: ApplicationLoadBalancer
    Properties:
      VpcId: !Ref VPC
      Name: ecs-fargate-app-tg
      HealthCheckEnabled: true
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 5
      HealthCheckIntervalSeconds: 60
      HealthCheckTimeoutSeconds: 5
      TargetType: ip
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: ecs-fargate-app-tg

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

Outputs:
  ApplicationLoadBalancerUrl:
    Description: The URL of the Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.DNSName
